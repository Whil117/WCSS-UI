import { SerializedStyles } from '@emotion/react';
import styled from '@emotion/styled';
import { FC, ReactNode } from 'react';

type TagsTexts =
  | 'h1'
  | 'h2'
  | 'h3'
  | 'h4'
  | 'h5'
  | 'h6'
  | 'p'
  | 'span'
  | 'li'
  | 'a'
  | 'strong'
  | 'em'
  | 'i'
  | 'b'
  | 'u'
  | 's'
  | 'small'
  | 'big'
  | 'code'
  | 'pre'
  | 'blockquote'
  | 'hr'
  | 'br'
  | 'img'
  | 'table'
  | 'thead'
  | 'tbody'
  | 'tr'
  | 'td'
  | 'th'
  | 'ul'
  | 'ol'
  | 'dl'
  | 'dt'
  | 'dd'
  | 'q'
  | 'cite'
  | 'abbr'
  | 'acronym'
  | 'del'
  | 'ins'
  | 'sub'
  | 'sup'
  | 'var'
  | 'samp'
  | 'kbd'
  | 'tt'
  | 'bdo'
  | 'button'
  | 'label'
  | 'select'
  | 'option'
  | 'textarea'
  | 'form'
  | 'fieldset'
  | 'legend'
  | 'optgroup'
  | 'option'
  | 'select'
  | 'datalist'
  | 'keygen'
  | 'output'
  | 'progress'
  | 'meter'
  | 'details'
  | 'summary'
  | 'menu'
  | 'menuitem'
  | 'canvas'
  | 'caption'
  | 'col'
  | 'colgroup'
  | 'table'
  | 'tbody'
  | 'tfoot'
  | 'thead'
  | 'tr'
  | 'td'
  | 'th'
  | 'button'
  | 'datalist'
  | 'fieldset'
  | 'form'
  | 'input'
  | 'label'
  | 'legend'
  | 'meter'
  | 'optgroup'
  | 'option'
  | 'output'
  | 'progress'
  | 'select'
  | 'textarea'
  | 'details'
  | 'summary'
  | 'menu'
  | 'menuitem'
  | 'canvas'
  | 'caption'
  | 'col'
  | 'colgroup'
  | 'table'
  | 'tbody'
  | 'tfoot'
  | 'thead'
  | 'tr'
  | 'td'
  | 'th'
  | 'a'
  | 'b'
  | 'i'
  | 'em'
  | 'strong'
  | 'u'
  | 's'
  | 'small'
  | 'big'
  | 'code'
  | 'pre'
  | 'blockquote'
  | 'hr'
  | 'br'
  | 'img'
  | 'table';

type Props = {
  children: ReactNode;
  tag: TagsTexts;
  css?: SerializedStyles;
};

const AtomText: FC<Props> = ({ children, tag, css }) => {
  const Atom = styled.div(css);
  const NewAtomText = Atom.withComponent<any>(tag);
  return children ? <NewAtomText>{children}</NewAtomText> : <NewAtomText />;
};

export default AtomText;
